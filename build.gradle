plugins {
    id("org.jetbrains.kotlin.jvm") version "1.3.61"
    id("org.jetbrains.kotlin.kapt") version "1.3.61"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.3.61"
    id("com.github.johnrengelman.shadow") version "6.1.0"
    id("io.micronaut.application") version "1.2.0"
    id("com.google.protobuf") version "0.8.13"
    id("org.jlleitschuh.gradle.ktlint") version "8.1.0"
    id("org.jlleitschuh.gradle.ktlint-idea") version "8.1.0"
    id("com.adarshr.test-logger") version '2.0.0'
}

version = "0.1"
group = "com.discounts"

ext {
    protocVersion = "3.14.0"
    grpcVersion = "1.21.0"
    grpcKotlinVersion = "0.1.2"
    kotlinxCoroutinesVersion="1.3.8"
}


repositories {
    mavenCentral()
    jcenter()
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/grpckt'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:$protocVersion" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion" }
        grpckt { artifact = "io.grpc:protoc-gen-grpc-kotlin:$grpcKotlinVersion" }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
            grpckt {}
        }
    }
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.discounts.*")
    }
}

dependencies {
    implementation("io.micronaut:micronaut-validation")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion")
    implementation("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
    implementation("io.micronaut:micronaut-runtime")
    implementation("javax.annotation:javax.annotation-api")
    implementation("io.micronaut:micronaut-http-client")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")

    // Micronaut imports:
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    kaptTest "io.micronaut:micronaut-inject-java"
    runtime "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut.mongodb:micronaut-mongo-reactive"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut.grpc:micronaut-grpc-runtime"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut:micronaut-management"
    implementation "io.micronaut.micrometer:micronaut-micrometer-registry-prometheus"
    implementation "io.micronaut:micronaut-core"
    testImplementation "io.micronaut.test:micronaut-test-junit5"

    // Log imports:
    implementation('io.github.microutils:kotlin-logging:1.12.0')

    // Kotlin coroutines:
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinxCoroutinesVersion")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$kotlinxCoroutinesVersion")

    // GRPC:
    implementation("io.micronaut.grpc:micronaut-grpc-runtime")
    implementation("io.grpc:grpc-kotlin-stub:$grpcKotlinVersion")

    // MONGODB:
    implementation("io.micronaut.mongodb:micronaut-mongo-reactive")
    implementation("io.github.gaplotech:kotlin-protobuf-bson-codec:0.3.0") // to allow protobuffers serialization on Mongodb
    testImplementation("de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.2.0")
}

application {
    mainClass.set("com.discounts.ApplicationKt")
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
}

tasks {
    compileKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
}
